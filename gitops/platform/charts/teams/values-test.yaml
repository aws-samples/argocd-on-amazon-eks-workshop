name: myteams

annotations:
  toplevel: annotations
labels:
  toplevel: labels

networkPolicies:
  enabled: true
  annotations: {}
  labels: {}
  egress:
    deny:
      all:
        # -- create a NetworkPolicy that denies all outgoing traffic
        enabled: true
        # -- define a PodSelector that should be used. Uses all Pods by default
        podSelector: {}
    allow:
      dns:
        # -- create a NetworkPolicy that allows outgoing traffic to the Kubernetes DNS
        enabled: true
        # -- The namespace where the Kubneretes DNS is running
        namespace: "kube-system"
        # -- The labels of the Kubernetes DNS
        podLabels:
          k8s-app: kube-dns
        # -- define a PodSelector that should be used. Uses all Pods by default
        podSelector: {}
  ingress:
    deny:
      all:
        # -- create a NetworkPolicy that denies all incoming traffic
        enabled: true
        # -- define a PodSelector that should be used. Uses all Pods by default
        podSelector: {}


namespaces:
  namespace1:
    annotations:
      additionalAnnotations:
        foo: bar
      scheduler:
        defaultTolerations:
        - operator: Equal
          value: value1
          effect: NoSchedule
          key: dedicated-node
        nodeSelector: "foo"
        tolerationsWhitelist:
        - operator: Exists
          effect: NoSchedule
          key: dedicated-node
    labels:
      additionalLabels:
        foo: baz
      podSecurityAdmission:
        audit:
          # -- Value must be one of privileged, baseline, or restricted which correspond to Pod Security Standard levels.
          standard: "privileged"
          # -- Version label that can be used to pin the policy to the version that shipped with a given Kubernetes minor version (for example v1.27).
          version: "v1.27"
        enforce:
          # -- Value must be one of privileged, baseline, or restricted which correspond to Pod Security Standard levels.
          standard: "privileged"
          # -- Version label that can be used to pin the policy to the version that shipped with a given Kubernetes minor version (for example v1.27).
          version: "v1.27"
        warn:
          # -- Value must be one of privileged, baseline, or restricted which correspond to Pod Security Standard levels.
          standard: "privileged"
          # -- Version label that can be used to pin the policy to the version that shipped with a given Kubernetes minor version (for example v1.27).
          version: "v1.27"
    networkPolicies:
    - name: foo
      labels:
        foo: bar
      annotations:
        bar: baz
      spec:
        podSelector:
          matchLabels:
            role: db
    limitRanges:
    - name: foo
      labels:
        foo: bar
      annotations:
        bar: baz
      limits:
        - default: # this section defines default limits
            cpu: 500m
          defaultRequest: # this section defines default requests
            cpu: 500m
          max: # max and min define the limit range
            cpu: "1"
          min:
            cpu: 100m
          type: Container
    resourceQuotas:
    - name: foo
      labels:
        foo: bar
      annotations:
        bar: baz
      spec:
        hard:
          cpu: "1000"
          memory: 200Gi
          pods: "10"
        scopeSelector:
          matchExpressions:
          - operator : In
            scopeName: PriorityClass
            values: ["high"]

  namespace2:
    annotations:
      additionalAnnotations:
        foo: baz
      # ... other annotations
